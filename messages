import random

class Localizacao:
    def __init__(self, latitude, longitude):
        self.latitude = latitude
        self.longitude = longitude

class Veiculo:
    def __init__(self, id, localizacao):
        self.id = id
        self.localizacao = localizacao

class Passageiro:
    def __init__(self, id, localizacao):
        self.id = id
        self.localizacao = localizacao

def calcular_distancia(localizacao1, localizacao2):
    # Simulação simples de cálculo de distância entre duas localizações
    return abs(localizacao1.latitude - localizacao2.latitude) + abs(localizacao1.longitude - localizacao2.longitude)

def calcular_possibilidade_aceitacao():
    return random.random() > 0.5  # 50% de chance de aceitação

def calcular_tempo_estimado(localizacao_veiculo, localizacao_passageiro):
    # Simulação simples de cálculo de tempo estimado
    distancia = calcular_distancia(localizacao_veiculo, localizacao_passageiro)
    return distancia * 5  # Tempo estimado de 5 minutos por unidade de distância

# Criando veículos e passageiros simulados
veiculos = [Veiculo(1, Localizacao(0, 0)), Veiculo(2, Localizacao(2, 2))]
passageiros = [Passageiro(1, Localizacao(1, 1)), Passageiro(2, Localizacao(3, 3))]

# Simulando processamento de viagens
for passageiro in passageiros:
    print(f"Passageiro {passageiro.id} está na localização ({passageiro.localizacao.latitude}, {passageiro.localizacao.longitude})")
    
    for veiculo in veiculos:
        distancia = calcular_distancia(passageiro.localizacao, veiculo.localizacao)
        print(f"  Distância até o veículo {veiculo.id}: {distancia}")
        
        possibilidade_aceitacao = calcular_possibilidade_aceitacao()
        if possibilidade_aceitacao:
            tempo_estimado = calcular_tempo_estimado(veiculo.localizacao, passageiro.localizacao)
            print(f"  O veículo {veiculo.id} aceitou a viagem. Tempo estimado: {tempo_estimado} minutos\n")
            break
        else:
            print(f"  O veículo {veiculo.id} recusou a viagem.\n")
